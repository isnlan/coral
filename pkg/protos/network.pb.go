// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chain struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Consensus            string   `protobuf:"bytes,3,opt,name=consensus,proto3" json:"consensus,omitempty"`
	NodeCount            int32    `protobuf:"varint,4,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`
	TlsEnabled           bool     `protobuf:"varint,5,opt,name=tls_enabled,json=tlsEnabled,proto3" json:"tls_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{0}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Chain) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Chain) GetConsensus() string {
	if m != nil {
		return m.Consensus
	}
	return ""
}

func (m *Chain) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *Chain) GetTlsEnabled() bool {
	if m != nil {
		return m.TlsEnabled
	}
	return false
}

type Channel struct {
	Chain                *Chain   `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{1}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetChain() *Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *Channel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChainStatus struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainStatus) Reset()         { *m = ChainStatus{} }
func (m *ChainStatus) String() string { return proto.CompactTextString(m) }
func (*ChainStatus) ProtoMessage()    {}
func (*ChainStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{2}
}

func (m *ChainStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainStatus.Unmarshal(m, b)
}
func (m *ChainStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainStatus.Marshal(b, m, deterministic)
}
func (m *ChainStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainStatus.Merge(m, src)
}
func (m *ChainStatus) XXX_Size() int {
	return xxx_messageInfo_ChainStatus.Size(m)
}
func (m *ChainStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ChainStatus proto.InternalMessageInfo

func (m *ChainStatus) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type Artifacts struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifacts) Reset()         { *m = Artifacts{} }
func (m *Artifacts) String() string { return proto.CompactTextString(m) }
func (*Artifacts) ProtoMessage()    {}
func (*Artifacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{3}
}

func (m *Artifacts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifacts.Unmarshal(m, b)
}
func (m *Artifacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifacts.Marshal(b, m, deterministic)
}
func (m *Artifacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifacts.Merge(m, src)
}
func (m *Artifacts) XXX_Size() int {
	return xxx_messageInfo_Artifacts.Size(m)
}
func (m *Artifacts) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifacts.DiscardUnknown(m)
}

var xxx_messageInfo_Artifacts proto.InternalMessageInfo

func (m *Artifacts) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Contract struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Args                 [][]byte `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{4}
}

func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contract) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Contract) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Contract) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Contract) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Transaction struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{5}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ContractResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractResponse) Reset()         { *m = ContractResponse{} }
func (m *ContractResponse) String() string { return proto.CompactTextString(m) }
func (*ContractResponse) ProtoMessage()    {}
func (*ContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{6}
}

func (m *ContractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractResponse.Unmarshal(m, b)
}
func (m *ContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractResponse.Marshal(b, m, deterministic)
}
func (m *ContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractResponse.Merge(m, src)
}
func (m *ContractResponse) XXX_Size() int {
	return xxx_messageInfo_ContractResponse.Size(m)
}
func (m *ContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContractResponse proto.InternalMessageInfo

func (m *ContractResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ResponsePods struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePods) Reset()         { *m = ResponsePods{} }
func (m *ResponsePods) String() string { return proto.CompactTextString(m) }
func (*ResponsePods) ProtoMessage()    {}
func (*ResponsePods) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{7}
}

func (m *ResponsePods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePods.Unmarshal(m, b)
}
func (m *ResponsePods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePods.Marshal(b, m, deterministic)
}
func (m *ResponsePods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePods.Merge(m, src)
}
func (m *ResponsePods) XXX_Size() int {
	return xxx_messageInfo_ResponsePods.Size(m)
}
func (m *ResponsePods) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePods.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePods proto.InternalMessageInfo

func (m *ResponsePods) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type BlockchainInfo struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockchainInfo) Reset()         { *m = BlockchainInfo{} }
func (m *BlockchainInfo) String() string { return proto.CompactTextString(m) }
func (*BlockchainInfo) ProtoMessage()    {}
func (*BlockchainInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{8}
}

func (m *BlockchainInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainInfo.Unmarshal(m, b)
}
func (m *BlockchainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainInfo.Marshal(b, m, deterministic)
}
func (m *BlockchainInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainInfo.Merge(m, src)
}
func (m *BlockchainInfo) XXX_Size() int {
	return xxx_messageInfo_BlockchainInfo.Size(m)
}
func (m *BlockchainInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainInfo proto.InternalMessageInfo

func (m *BlockchainInfo) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RequestQueryBlock struct {
	Channel              *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestQueryBlock) Reset()         { *m = RequestQueryBlock{} }
func (m *RequestQueryBlock) String() string { return proto.CompactTextString(m) }
func (*RequestQueryBlock) ProtoMessage()    {}
func (*RequestQueryBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{9}
}

func (m *RequestQueryBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestQueryBlock.Unmarshal(m, b)
}
func (m *RequestQueryBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestQueryBlock.Marshal(b, m, deterministic)
}
func (m *RequestQueryBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestQueryBlock.Merge(m, src)
}
func (m *RequestQueryBlock) XXX_Size() int {
	return xxx_messageInfo_RequestQueryBlock.Size(m)
}
func (m *RequestQueryBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestQueryBlock.DiscardUnknown(m)
}

var xxx_messageInfo_RequestQueryBlock proto.InternalMessageInfo

func (m *RequestQueryBlock) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type Block struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{10}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type BlockList struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockList) Reset()         { *m = BlockList{} }
func (m *BlockList) String() string { return proto.CompactTextString(m) }
func (*BlockList) ProtoMessage()    {}
func (*BlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{11}
}

func (m *BlockList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockList.Unmarshal(m, b)
}
func (m *BlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockList.Marshal(b, m, deterministic)
}
func (m *BlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockList.Merge(m, src)
}
func (m *BlockList) XXX_Size() int {
	return xxx_messageInfo_BlockList.Size(m)
}
func (m *BlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockList.DiscardUnknown(m)
}

var xxx_messageInfo_BlockList proto.InternalMessageInfo

func (m *BlockList) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type Resources struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{12}
}

func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (m *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(m, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pwd                  string   `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{13}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type Cert struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cert) Reset()         { *m = Cert{} }
func (m *Cert) String() string { return proto.CompactTextString(m) }
func (*Cert) ProtoMessage()    {}
func (*Cert) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{14}
}

func (m *Cert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cert.Unmarshal(m, b)
}
func (m *Cert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cert.Marshal(b, m, deterministic)
}
func (m *Cert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cert.Merge(m, src)
}
func (m *Cert) XXX_Size() int {
	return xxx_messageInfo_Cert.Size(m)
}
func (m *Cert) XXX_DiscardUnknown() {
	xxx_messageInfo_Cert.DiscardUnknown(m)
}

var xxx_messageInfo_Cert proto.InternalMessageInfo

func (m *Cert) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Chain)(nil), "protos.Chain")
	proto.RegisterType((*Channel)(nil), "protos.Channel")
	proto.RegisterType((*ChainStatus)(nil), "protos.ChainStatus")
	proto.RegisterType((*Artifacts)(nil), "protos.Artifacts")
	proto.RegisterType((*Contract)(nil), "protos.Contract")
	proto.RegisterType((*Transaction)(nil), "protos.Transaction")
	proto.RegisterType((*ContractResponse)(nil), "protos.ContractResponse")
	proto.RegisterType((*ResponsePods)(nil), "protos.ResponsePods")
	proto.RegisterType((*BlockchainInfo)(nil), "protos.BlockchainInfo")
	proto.RegisterType((*RequestQueryBlock)(nil), "protos.RequestQueryBlock")
	proto.RegisterType((*Block)(nil), "protos.Block")
	proto.RegisterType((*BlockList)(nil), "protos.BlockList")
	proto.RegisterType((*Resources)(nil), "protos.Resources")
	proto.RegisterType((*User)(nil), "protos.User")
	proto.RegisterType((*Cert)(nil), "protos.Cert")
}

func init() {
	proto.RegisterFile("network.proto", fileDescriptor_8571034d60397816)
}

var fileDescriptor_8571034d60397816 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdb, 0x4e, 0xdb, 0x4c,
	0x10, 0x26, 0x27, 0x12, 0x4f, 0x42, 0x20, 0xfb, 0xff, 0xa2, 0x69, 0x28, 0x22, 0x72, 0x4b, 0x95,
	0x4a, 0x55, 0x50, 0x69, 0x51, 0x0f, 0x17, 0x48, 0x25, 0x50, 0x29, 0x12, 0xaa, 0x5a, 0x53, 0xae,
	0xd1, 0xc6, 0x5e, 0x82, 0x85, 0xd9, 0x75, 0xbd, 0x63, 0x10, 0xaf, 0xd0, 0xdb, 0xbe, 0x70, 0xb5,
	0xbb, 0xb6, 0xe3, 0x04, 0x17, 0x41, 0xaf, 0xb2, 0x73, 0xf8, 0x66, 0xc6, 0x33, 0xf3, 0x4d, 0x60,
	0x85, 0x33, 0xbc, 0x11, 0xd1, 0xe5, 0x30, 0x8c, 0x04, 0x0a, 0xb2, 0xac, 0x7f, 0x64, 0x6f, 0x63,
	0x2a, 0xc4, 0x34, 0x60, 0x3b, 0x5a, 0x9c, 0xc4, 0xe7, 0x3b, 0xec, 0x2a, 0xc4, 0x5b, 0xe3, 0x64,
	0xff, 0x2e, 0x41, 0x6d, 0x74, 0x41, 0x7d, 0x4e, 0x08, 0x54, 0x39, 0xbd, 0x62, 0xdd, 0x52, 0xbf,
	0x34, 0xb0, 0x1c, 0xfd, 0x26, 0x5d, 0xa8, 0x53, 0xd7, 0x15, 0x31, 0xc7, 0x6e, 0x59, 0xab, 0x53,
	0x91, 0x3c, 0x03, 0xcb, 0x15, 0x5c, 0x32, 0x2e, 0x63, 0xd9, 0xad, 0x68, 0xdb, 0x4c, 0x41, 0x36,
	0x01, 0xb8, 0xf0, 0xd8, 0x99, 0x81, 0x56, 0xfb, 0xa5, 0x41, 0xcd, 0xb1, 0x94, 0x66, 0xa4, 0xc1,
	0x5b, 0xd0, 0xc4, 0x40, 0x9e, 0x31, 0x4e, 0x27, 0x01, 0xf3, 0xba, 0xb5, 0x7e, 0x69, 0xd0, 0x70,
	0x00, 0x03, 0x79, 0x64, 0x34, 0xf6, 0x01, 0xd4, 0x47, 0x17, 0x94, 0x73, 0x16, 0x90, 0xe7, 0x50,
	0x73, 0x55, 0x7d, 0xba, 0xae, 0xe6, 0xee, 0x8a, 0xa9, 0x5b, 0x0e, 0x75, 0xd1, 0x8e, 0xb1, 0x65,
	0xb5, 0x97, 0x67, 0xb5, 0xdb, 0xdb, 0xd0, 0xd4, 0x3e, 0x27, 0x48, 0x31, 0x96, 0x64, 0x1d, 0x96,
	0xa5, 0x7e, 0xe9, 0x40, 0x0d, 0x27, 0x91, 0xec, 0x2d, 0xb0, 0x3e, 0x47, 0xe8, 0x9f, 0x53, 0x17,
	0xa5, 0x8a, 0xe3, 0x51, 0xa4, 0xda, 0xa5, 0xe5, 0xe8, 0xb7, 0x8d, 0xd0, 0x18, 0x09, 0x8e, 0x11,
	0x75, 0xb1, 0xb0, 0x47, 0x04, 0xaa, 0x21, 0xc5, 0x8b, 0x34, 0xb7, 0x7a, 0xab, 0xbe, 0x5d, 0xb3,
	0x48, 0xfa, 0x82, 0x27, 0xbd, 0x49, 0x45, 0xe5, 0x4d, 0xa3, 0xa9, 0xec, 0x56, 0xfb, 0x15, 0x95,
	0x41, 0xbd, 0xb3, 0xac, 0xb5, 0x5c, 0xd6, 0x4d, 0x68, 0xfe, 0x88, 0x28, 0x97, 0xd4, 0x45, 0x05,
	0x6b, 0x43, 0xd9, 0xf7, 0x92, 0xb4, 0x65, 0xdf, 0xb3, 0x5f, 0xc2, 0x5a, 0x5a, 0x94, 0xc3, 0x64,
	0xa8, 0x1a, 0x3f, 0x57, 0xbc, 0x95, 0x84, 0xb1, 0xa1, 0x95, 0xda, 0xbf, 0x09, 0x4f, 0x16, 0xfa,
	0xbc, 0x80, 0xf6, 0x41, 0x20, 0xdc, 0x4b, 0xdd, 0xca, 0x31, 0x3f, 0x17, 0x85, 0x5e, 0xfb, 0xd0,
	0x71, 0xd8, 0xcf, 0x98, 0x49, 0xfc, 0x1e, 0xb3, 0xe8, 0x56, 0x23, 0xc8, 0x2b, 0xa8, 0xbb, 0x66,
	0x4e, 0xc9, 0x78, 0x56, 0x73, 0xe3, 0x51, 0x6a, 0x27, 0xb5, 0xdb, 0x1b, 0x50, 0x33, 0x98, 0xa2,
	0xe0, 0xbb, 0x60, 0x69, 0xe3, 0xb1, 0x2f, 0x91, 0x6c, 0xc3, 0xf2, 0x44, 0x09, 0x6a, 0x52, 0x95,
	0xfc, 0xc8, 0xb5, 0x8b, 0x93, 0x18, 0xd5, 0xe0, 0x1c, 0x26, 0x45, 0x1c, 0xb9, 0xac, 0xf8, 0xbb,
	0x5e, 0x43, 0xf5, 0x54, 0xb2, 0xa8, 0x70, 0x68, 0x6b, 0x50, 0x09, 0x6f, 0xbc, 0x64, 0x66, 0xea,
	0x69, 0xf7, 0xa0, 0x3a, 0x62, 0x11, 0x16, 0x45, 0xda, 0xfd, 0xd5, 0x80, 0xfa, 0x57, 0xc3, 0x2d,
	0xb2, 0x07, 0x70, 0x10, 0xfb, 0x81, 0x67, 0x48, 0x33, 0xbf, 0x8e, 0xbd, 0xf5, 0xa1, 0xe1, 0xda,
	0x30, 0xe5, 0xda, 0xf0, 0x48, 0x71, 0xcd, 0x5e, 0x22, 0x1f, 0xa1, 0x95, 0xc2, 0xf4, 0x5a, 0x2f,
	0x36, 0xea, 0x1e, 0xe8, 0x1e, 0xc0, 0x09, 0xd2, 0x08, 0x1f, 0x99, 0xf1, 0x0d, 0x58, 0x63, 0xe9,
	0xc4, 0x9c, 0xfb, 0x7c, 0xba, 0x88, 0xfa, 0x6f, 0x4e, 0x34, 0x0c, 0xb1, 0x97, 0xc8, 0x3b, 0xb0,
	0x4e, 0x50, 0x84, 0xff, 0x92, 0x48, 0xe1, 0x42, 0xe6, 0x3d, 0x30, 0xd1, 0x27, 0x58, 0x3d, 0x64,
	0x01, 0x43, 0xa6, 0xd5, 0x87, 0x14, 0xe9, 0xc3, 0xd3, 0xbd, 0x87, 0xce, 0xa1, 0xb8, 0xe1, 0x81,
	0xa0, 0xde, 0x8c, 0xb8, 0x0b, 0xe8, 0x4e, 0x2a, 0x66, 0x1e, 0xf6, 0x12, 0x19, 0x40, 0xc3, 0x61,
	0x53, 0x5f, 0x22, 0x8b, 0x48, 0x2b, 0x75, 0x50, 0x1b, 0xd2, 0xcb, 0x24, 0xb5, 0x01, 0xa6, 0xbc,
	0x31, 0x97, 0x48, 0x83, 0x20, 0x63, 0xfe, 0x5a, 0xe6, 0x92, 0x68, 0x66, 0x9f, 0x96, 0xe3, 0xa9,
	0x1e, 0x74, 0xfb, 0x34, 0xf4, 0x28, 0xb2, 0xc7, 0x43, 0x3f, 0xc0, 0x8a, 0xe6, 0xd6, 0xe3, 0x91,
	0xfb, 0xd0, 0x1e, 0xf3, 0x6b, 0x71, 0x79, 0x5f, 0xd2, 0xee, 0xa2, 0x26, 0x3d, 0x0c, 0xba, 0xa7,
	0x6d, 0x93, 0x59, 0x75, 0x4f, 0x1f, 0x8a, 0x85, 0x86, 0xfe, 0x9f, 0x8a, 0xf9, 0x6b, 0xa2, 0x4b,
	0x6e, 0x6a, 0xe0, 0x31, 0xf3, 0xa6, 0x2c, 0x2a, 0xda, 0xea, 0x3c, 0x77, 0xb3, 0x0b, 0xa3, 0xb7,
	0xba, 0x63, 0x90, 0x14, 0x99, 0x44, 0x6d, 0x96, 0x77, 0xf1, 0xf3, 0xdc, 0xd7, 0x09, 0x21, 0x77,
	0x7f, 0x9e, 0xce, 0xca, 0x5a, 0x38, 0x4d, 0x77, 0x91, 0x5f, 0xe0, 0x89, 0x8a, 0x3a, 0x65, 0xe9,
	0x47, 0xce, 0xae, 0x47, 0x27, 0xf7, 0x75, 0x46, 0xf5, 0xf7, 0xfd, 0x9b, 0x98, 0xbf, 0xd5, 0xb7,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x73, 0x6f, 0x00, 0xa8, 0x6e, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkClient is the client API for Network service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkClient interface {
	BuildChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error)
	BuildChannel(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*empty.Empty, error)
	StartChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error)
	IsRunning(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ChainStatus, error)
	StopChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error)
	IsStopped(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ChainStatus, error)
	DeleteChainData(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error)
	DownloadArtifacts(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*Artifacts, error)
	Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*Cert, error)
	InstallContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error)
	UpdateContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error)
	QueryContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error)
	InvokeContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*ContractResponse, error)
	QueryChainPods(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ResponsePods, error)
	QueryLedger(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*BlockchainInfo, error)
	QueryLatestBlocks(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*Block, error)
	QueryBlock(ctx context.Context, in *RequestQueryBlock, opts ...grpc.CallOption) (*Block, error)
	ChangeChainPodResources(ctx context.Context, in *Resources, opts ...grpc.CallOption) (*empty.Empty, error)
}

type networkClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkClient(cc grpc.ClientConnInterface) NetworkClient {
	return &networkClient{cc}
}

func (c *networkClient) BuildChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/BuildChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) BuildChannel(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/BuildChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) StartChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/StartChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) IsRunning(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ChainStatus, error) {
	out := new(ChainStatus)
	err := c.cc.Invoke(ctx, "/protos.Network/IsRunning", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) StopChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/StopChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) IsStopped(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ChainStatus, error) {
	out := new(ChainStatus)
	err := c.cc.Invoke(ctx, "/protos.Network/IsStopped", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) DeleteChainData(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/DeleteChainData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) DownloadArtifacts(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*Artifacts, error) {
	out := new(Artifacts)
	err := c.cc.Invoke(ctx, "/protos.Network/DownloadArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*Cert, error) {
	out := new(Cert)
	err := c.cc.Invoke(ctx, "/protos.Network/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) InstallContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/protos.Network/InstallContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) UpdateContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/protos.Network/UpdateContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) QueryContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/protos.Network/QueryContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) InvokeContract(ctx context.Context, in *Contract, opts ...grpc.CallOption) (*ContractResponse, error) {
	out := new(ContractResponse)
	err := c.cc.Invoke(ctx, "/protos.Network/InvokeContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) QueryChainPods(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*ResponsePods, error) {
	out := new(ResponsePods)
	err := c.cc.Invoke(ctx, "/protos.Network/QueryChainPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) QueryLedger(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*BlockchainInfo, error) {
	out := new(BlockchainInfo)
	err := c.cc.Invoke(ctx, "/protos.Network/QueryLedger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) QueryLatestBlocks(ctx context.Context, in *Channel, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/protos.Network/QueryLatestBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) QueryBlock(ctx context.Context, in *RequestQueryBlock, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/protos.Network/QueryBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkClient) ChangeChainPodResources(ctx context.Context, in *Resources, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Network/ChangeChainPodResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServer is the server API for Network service.
type NetworkServer interface {
	BuildChain(context.Context, *Chain) (*empty.Empty, error)
	BuildChannel(context.Context, *Channel) (*empty.Empty, error)
	StartChain(context.Context, *Chain) (*empty.Empty, error)
	IsRunning(context.Context, *Chain) (*ChainStatus, error)
	StopChain(context.Context, *Chain) (*empty.Empty, error)
	IsStopped(context.Context, *Chain) (*ChainStatus, error)
	DeleteChainData(context.Context, *Chain) (*empty.Empty, error)
	DownloadArtifacts(context.Context, *Chain) (*Artifacts, error)
	Register(context.Context, *User) (*Cert, error)
	InstallContract(context.Context, *Contract) (*Transaction, error)
	UpdateContract(context.Context, *Contract) (*Transaction, error)
	QueryContract(context.Context, *Contract) (*Transaction, error)
	InvokeContract(context.Context, *Contract) (*ContractResponse, error)
	QueryChainPods(context.Context, *Chain) (*ResponsePods, error)
	QueryLedger(context.Context, *Channel) (*BlockchainInfo, error)
	QueryLatestBlocks(context.Context, *Channel) (*Block, error)
	QueryBlock(context.Context, *RequestQueryBlock) (*Block, error)
	ChangeChainPodResources(context.Context, *Resources) (*empty.Empty, error)
}

// UnimplementedNetworkServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServer struct {
}

func (*UnimplementedNetworkServer) BuildChain(ctx context.Context, req *Chain) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildChain not implemented")
}
func (*UnimplementedNetworkServer) BuildChannel(ctx context.Context, req *Channel) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildChannel not implemented")
}
func (*UnimplementedNetworkServer) StartChain(ctx context.Context, req *Chain) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartChain not implemented")
}
func (*UnimplementedNetworkServer) IsRunning(ctx context.Context, req *Chain) (*ChainStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsRunning not implemented")
}
func (*UnimplementedNetworkServer) StopChain(ctx context.Context, req *Chain) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopChain not implemented")
}
func (*UnimplementedNetworkServer) IsStopped(ctx context.Context, req *Chain) (*ChainStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsStopped not implemented")
}
func (*UnimplementedNetworkServer) DeleteChainData(ctx context.Context, req *Chain) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChainData not implemented")
}
func (*UnimplementedNetworkServer) DownloadArtifacts(ctx context.Context, req *Chain) (*Artifacts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadArtifacts not implemented")
}
func (*UnimplementedNetworkServer) Register(ctx context.Context, req *User) (*Cert, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedNetworkServer) InstallContract(ctx context.Context, req *Contract) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallContract not implemented")
}
func (*UnimplementedNetworkServer) UpdateContract(ctx context.Context, req *Contract) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContract not implemented")
}
func (*UnimplementedNetworkServer) QueryContract(ctx context.Context, req *Contract) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryContract not implemented")
}
func (*UnimplementedNetworkServer) InvokeContract(ctx context.Context, req *Contract) (*ContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeContract not implemented")
}
func (*UnimplementedNetworkServer) QueryChainPods(ctx context.Context, req *Chain) (*ResponsePods, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChainPods not implemented")
}
func (*UnimplementedNetworkServer) QueryLedger(ctx context.Context, req *Channel) (*BlockchainInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLedger not implemented")
}
func (*UnimplementedNetworkServer) QueryLatestBlocks(ctx context.Context, req *Channel) (*Block, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLatestBlocks not implemented")
}
func (*UnimplementedNetworkServer) QueryBlock(ctx context.Context, req *RequestQueryBlock) (*Block, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBlock not implemented")
}
func (*UnimplementedNetworkServer) ChangeChainPodResources(ctx context.Context, req *Resources) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeChainPodResources not implemented")
}

func RegisterNetworkServer(s *grpc.Server, srv NetworkServer) {
	s.RegisterService(&_Network_serviceDesc, srv)
}

func _Network_BuildChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).BuildChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/BuildChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).BuildChain(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_BuildChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Channel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).BuildChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/BuildChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).BuildChannel(ctx, req.(*Channel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_StartChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).StartChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/StartChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).StartChain(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_IsRunning_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).IsRunning(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/IsRunning",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).IsRunning(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_StopChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).StopChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/StopChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).StopChain(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_IsStopped_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).IsStopped(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/IsStopped",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).IsStopped(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_DeleteChainData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).DeleteChainData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/DeleteChainData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).DeleteChainData(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_DownloadArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).DownloadArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/DownloadArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).DownloadArtifacts(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).Register(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_InstallContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).InstallContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/InstallContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).InstallContract(ctx, req.(*Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_UpdateContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).UpdateContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/UpdateContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).UpdateContract(ctx, req.(*Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_QueryContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).QueryContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/QueryContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).QueryContract(ctx, req.(*Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_InvokeContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).InvokeContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/InvokeContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).InvokeContract(ctx, req.(*Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_QueryChainPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).QueryChainPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/QueryChainPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).QueryChainPods(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_QueryLedger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Channel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).QueryLedger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/QueryLedger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).QueryLedger(ctx, req.(*Channel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_QueryLatestBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Channel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).QueryLatestBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/QueryLatestBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).QueryLatestBlocks(ctx, req.(*Channel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_QueryBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestQueryBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).QueryBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/QueryBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).QueryBlock(ctx, req.(*RequestQueryBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _Network_ChangeChainPodResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Resources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServer).ChangeChainPodResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Network/ChangeChainPodResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServer).ChangeChainPodResources(ctx, req.(*Resources))
	}
	return interceptor(ctx, in, info, handler)
}

var _Network_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Network",
	HandlerType: (*NetworkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildChain",
			Handler:    _Network_BuildChain_Handler,
		},
		{
			MethodName: "BuildChannel",
			Handler:    _Network_BuildChannel_Handler,
		},
		{
			MethodName: "StartChain",
			Handler:    _Network_StartChain_Handler,
		},
		{
			MethodName: "IsRunning",
			Handler:    _Network_IsRunning_Handler,
		},
		{
			MethodName: "StopChain",
			Handler:    _Network_StopChain_Handler,
		},
		{
			MethodName: "IsStopped",
			Handler:    _Network_IsStopped_Handler,
		},
		{
			MethodName: "DeleteChainData",
			Handler:    _Network_DeleteChainData_Handler,
		},
		{
			MethodName: "DownloadArtifacts",
			Handler:    _Network_DownloadArtifacts_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Network_Register_Handler,
		},
		{
			MethodName: "InstallContract",
			Handler:    _Network_InstallContract_Handler,
		},
		{
			MethodName: "UpdateContract",
			Handler:    _Network_UpdateContract_Handler,
		},
		{
			MethodName: "QueryContract",
			Handler:    _Network_QueryContract_Handler,
		},
		{
			MethodName: "InvokeContract",
			Handler:    _Network_InvokeContract_Handler,
		},
		{
			MethodName: "QueryChainPods",
			Handler:    _Network_QueryChainPods_Handler,
		},
		{
			MethodName: "QueryLedger",
			Handler:    _Network_QueryLedger_Handler,
		},
		{
			MethodName: "QueryLatestBlocks",
			Handler:    _Network_QueryLatestBlocks_Handler,
		},
		{
			MethodName: "QueryBlock",
			Handler:    _Network_QueryBlock_Handler,
		},
		{
			MethodName: "ChangeChainPodResources",
			Handler:    _Network_ChangeChainPodResources_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "network.proto",
}
