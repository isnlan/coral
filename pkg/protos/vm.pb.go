// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: vm.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role       string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Ports      []string `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	HostIp     string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Status     string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime int64    `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Cpu        string   `protobuf:"bytes,7,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory     string   `protobuf:"bytes,8,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{1}
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pod) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Pod) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Pod) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *Pod) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Pod) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Pod) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *Pod) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

type Ips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *Ips) Reset() {
	*x = Ips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ips) ProtoMessage() {}

func (x *Ips) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ips.ProtoReflect.Descriptor instead.
func (*Ips) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{2}
}

func (x *Ips) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type ResponseNamespaceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []string `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *ResponseNamespaceList) Reset() {
	*x = ResponseNamespaceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNamespaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNamespaceList) ProtoMessage() {}

func (x *ResponseNamespaceList) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNamespaceList.ProtoReflect.Descriptor instead.
func (*ResponseNamespaceList) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseNamespaceList) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{4}
}

func (x *Namespace) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

type ResponseServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ResponseServiceList) Reset() {
	*x = ResponseServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServiceList) ProtoMessage() {}

func (x *ResponseServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServiceList.ProtoReflect.Descriptor instead.
func (*ResponseServiceList) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseServiceList) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

type RequestServicePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns  string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Svc string `protobuf:"bytes,2,opt,name=svc,proto3" json:"svc,omitempty"`
}

func (x *RequestServicePort) Reset() {
	*x = RequestServicePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestServicePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestServicePort) ProtoMessage() {}

func (x *RequestServicePort) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestServicePort.ProtoReflect.Descriptor instead.
func (*RequestServicePort) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{6}
}

func (x *RequestServicePort) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *RequestServicePort) GetSvc() string {
	if x != nil {
		return x.Svc
	}
	return ""
}

type ResponseServicePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports []string `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *ResponseServicePort) Reset() {
	*x = ResponseServicePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServicePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServicePort) ProtoMessage() {}

func (x *ResponseServicePort) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServicePort.ProtoReflect.Descriptor instead.
func (*ResponseServicePort) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseServicePort) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

type ResponseDeploymentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []string `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *ResponseDeploymentList) Reset() {
	*x = ResponseDeploymentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDeploymentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeploymentList) ProtoMessage() {}

func (x *ResponseDeploymentList) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeploymentList.ProtoReflect.Descriptor instead.
func (*ResponseDeploymentList) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseDeploymentList) GetDeployments() []string {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type RequestNsPods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns     string            `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Label  string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Filter map[string]string `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RequestNsPods) Reset() {
	*x = RequestNsPods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNsPods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNsPods) ProtoMessage() {}

func (x *RequestNsPods) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNsPods.ProtoReflect.Descriptor instead.
func (*RequestNsPods) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{9}
}

func (x *RequestNsPods) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *RequestNsPods) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RequestNsPods) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ResponseNsPods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pods []*Pod `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *ResponseNsPods) Reset() {
	*x = ResponseNsPods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNsPods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNsPods) ProtoMessage() {}

func (x *ResponseNsPods) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNsPods.ProtoReflect.Descriptor instead.
func (*ResponseNsPods) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseNsPods) GetPods() []*Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

type RequestDeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns   string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RequestDeploymentStatus) Reset() {
	*x = RequestDeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeploymentStatus) ProtoMessage() {}

func (x *RequestDeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeploymentStatus.ProtoReflect.Descriptor instead.
func (*RequestDeploymentStatus) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{11}
}

func (x *RequestDeploymentStatus) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *RequestDeploymentStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []string `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *ResponseStatus) Reset() {
	*x = ResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStatus) ProtoMessage() {}

func (x *ResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStatus.ProtoReflect.Descriptor instead.
func (*ResponseStatus) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseStatus) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

type RequestBuildImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RequestBuildImage) Reset() {
	*x = RequestBuildImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBuildImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBuildImage) ProtoMessage() {}

func (x *RequestBuildImage) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBuildImage.ProtoReflect.Descriptor instead.
func (*RequestBuildImage) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{13}
}

func (x *RequestBuildImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *RequestBuildImage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RequestPushImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *RequestPushImage) Reset() {
	*x = RequestPushImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPushImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPushImage) ProtoMessage() {}

func (x *RequestPushImage) ProtoReflect() protoreflect.Message {
	mi := &file_vm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPushImage.ProtoReflect.Descriptor instead.
func (*RequestPushImage) Descriptor() ([]byte, []int) {
	return file_vm_proto_rawDescGZIP(), []int{14}
}

func (x *RequestPushImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestPushImage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_vm_proto protoreflect.FileDescriptor

var file_vm_proto_rawDesc = []byte{
	0x0a, 0x08, 0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x01, 0x0a, 0x03,
	0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x17, 0x0a,
	0x03, 0x49, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x37, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22,
	0x1b, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x36, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x76, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x76, 0x63, 0x22, 0x2b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xab, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x73, 0x50, 0x6f,
	0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x73, 0x50, 0x6f, 0x64, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x73, 0x50, 0x6f, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64,
	0x73, 0x22, 0x3d, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xe1, 0x05, 0x0a, 0x02, 0x56, 0x4d, 0x12, 0x2f,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x30, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x49, 0x70, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x73, 0x50, 0x6f, 0x64, 0x73, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e,
	0x73, 0x50, 0x6f, 0x64, 0x73, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x50, 0x75,
	0x73, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vm_proto_rawDescOnce sync.Once
	file_vm_proto_rawDescData = file_vm_proto_rawDesc
)

func file_vm_proto_rawDescGZIP() []byte {
	file_vm_proto_rawDescOnce.Do(func() {
		file_vm_proto_rawDescData = protoimpl.X.CompressGZIP(file_vm_proto_rawDescData)
	})
	return file_vm_proto_rawDescData
}

var file_vm_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_vm_proto_goTypes = []interface{}{
	(*Data)(nil),                    // 0: protos.Data
	(*Pod)(nil),                     // 1: protos.Pod
	(*Ips)(nil),                     // 2: protos.Ips
	(*ResponseNamespaceList)(nil),   // 3: protos.ResponseNamespaceList
	(*Namespace)(nil),               // 4: protos.Namespace
	(*ResponseServiceList)(nil),     // 5: protos.ResponseServiceList
	(*RequestServicePort)(nil),      // 6: protos.RequestServicePort
	(*ResponseServicePort)(nil),     // 7: protos.ResponseServicePort
	(*ResponseDeploymentList)(nil),  // 8: protos.ResponseDeploymentList
	(*RequestNsPods)(nil),           // 9: protos.RequestNsPods
	(*ResponseNsPods)(nil),          // 10: protos.ResponseNsPods
	(*RequestDeploymentStatus)(nil), // 11: protos.RequestDeploymentStatus
	(*ResponseStatus)(nil),          // 12: protos.ResponseStatus
	(*RequestBuildImage)(nil),       // 13: protos.RequestBuildImage
	(*RequestPushImage)(nil),        // 14: protos.RequestPushImage
	nil,                             // 15: protos.RequestNsPods.FilterEntry
	(*emptypb.Empty)(nil),           // 16: google.protobuf.Empty
}
var file_vm_proto_depIdxs = []int32{
	15, // 0: protos.RequestNsPods.filter:type_name -> protos.RequestNsPods.FilterEntry
	1,  // 1: protos.ResponseNsPods.pods:type_name -> protos.Pod
	0,  // 2: protos.VM.Apply:input_type -> protos.Data
	0,  // 3: protos.VM.Delete:input_type -> protos.Data
	16, // 4: protos.VM.GetNodeIps:input_type -> google.protobuf.Empty
	16, // 5: protos.VM.GetNamespacesList:input_type -> google.protobuf.Empty
	4,  // 6: protos.VM.GetServiceList:input_type -> protos.Namespace
	6,  // 7: protos.VM.GetServicePort:input_type -> protos.RequestServicePort
	4,  // 8: protos.VM.GetDeploymentList:input_type -> protos.Namespace
	11, // 9: protos.VM.GetDeploymentStatus:input_type -> protos.RequestDeploymentStatus
	9,  // 10: protos.VM.GetNamespacesPods:input_type -> protos.RequestNsPods
	13, // 11: protos.VM.BuildImage:input_type -> protos.RequestBuildImage
	14, // 12: protos.VM.PushImage:input_type -> protos.RequestPushImage
	16, // 13: protos.VM.Apply:output_type -> google.protobuf.Empty
	16, // 14: protos.VM.Delete:output_type -> google.protobuf.Empty
	2,  // 15: protos.VM.GetNodeIps:output_type -> protos.Ips
	3,  // 16: protos.VM.GetNamespacesList:output_type -> protos.ResponseNamespaceList
	5,  // 17: protos.VM.GetServiceList:output_type -> protos.ResponseServiceList
	7,  // 18: protos.VM.GetServicePort:output_type -> protos.ResponseServicePort
	8,  // 19: protos.VM.GetDeploymentList:output_type -> protos.ResponseDeploymentList
	12, // 20: protos.VM.GetDeploymentStatus:output_type -> protos.ResponseStatus
	10, // 21: protos.VM.GetNamespacesPods:output_type -> protos.ResponseNsPods
	16, // 22: protos.VM.BuildImage:output_type -> google.protobuf.Empty
	16, // 23: protos.VM.PushImage:output_type -> google.protobuf.Empty
	13, // [13:24] is the sub-list for method output_type
	2,  // [2:13] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_vm_proto_init() }
func file_vm_proto_init() {
	if File_vm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNamespaceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestServicePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServicePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDeploymentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNsPods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNsPods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBuildImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPushImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vm_proto_goTypes,
		DependencyIndexes: file_vm_proto_depIdxs,
		MessageInfos:      file_vm_proto_msgTypes,
	}.Build()
	File_vm_proto = out.File
	file_vm_proto_rawDesc = nil
	file_vm_proto_goTypes = nil
	file_vm_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VMClient is the client API for VM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VMClient interface {
	Apply(ctx context.Context, in *Data, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *Data, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetNodeIps(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Ips, error)
	GetNamespacesList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ResponseNamespaceList, error)
	GetServiceList(ctx context.Context, in *Namespace, opts ...grpc.CallOption) (*ResponseServiceList, error)
	GetServicePort(ctx context.Context, in *RequestServicePort, opts ...grpc.CallOption) (*ResponseServicePort, error)
	GetDeploymentList(ctx context.Context, in *Namespace, opts ...grpc.CallOption) (*ResponseDeploymentList, error)
	GetDeploymentStatus(ctx context.Context, in *RequestDeploymentStatus, opts ...grpc.CallOption) (*ResponseStatus, error)
	GetNamespacesPods(ctx context.Context, in *RequestNsPods, opts ...grpc.CallOption) (*ResponseNsPods, error)
	BuildImage(ctx context.Context, in *RequestBuildImage, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushImage(ctx context.Context, in *RequestPushImage, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type vMClient struct {
	cc grpc.ClientConnInterface
}

func NewVMClient(cc grpc.ClientConnInterface) VMClient {
	return &vMClient{cc}
}

func (c *vMClient) Apply(ctx context.Context, in *Data, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.VM/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) Delete(ctx context.Context, in *Data, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.VM/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetNodeIps(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Ips, error) {
	out := new(Ips)
	err := c.cc.Invoke(ctx, "/protos.VM/GetNodeIps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetNamespacesList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ResponseNamespaceList, error) {
	out := new(ResponseNamespaceList)
	err := c.cc.Invoke(ctx, "/protos.VM/GetNamespacesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetServiceList(ctx context.Context, in *Namespace, opts ...grpc.CallOption) (*ResponseServiceList, error) {
	out := new(ResponseServiceList)
	err := c.cc.Invoke(ctx, "/protos.VM/GetServiceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetServicePort(ctx context.Context, in *RequestServicePort, opts ...grpc.CallOption) (*ResponseServicePort, error) {
	out := new(ResponseServicePort)
	err := c.cc.Invoke(ctx, "/protos.VM/GetServicePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetDeploymentList(ctx context.Context, in *Namespace, opts ...grpc.CallOption) (*ResponseDeploymentList, error) {
	out := new(ResponseDeploymentList)
	err := c.cc.Invoke(ctx, "/protos.VM/GetDeploymentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetDeploymentStatus(ctx context.Context, in *RequestDeploymentStatus, opts ...grpc.CallOption) (*ResponseStatus, error) {
	out := new(ResponseStatus)
	err := c.cc.Invoke(ctx, "/protos.VM/GetDeploymentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) GetNamespacesPods(ctx context.Context, in *RequestNsPods, opts ...grpc.CallOption) (*ResponseNsPods, error) {
	out := new(ResponseNsPods)
	err := c.cc.Invoke(ctx, "/protos.VM/GetNamespacesPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) BuildImage(ctx context.Context, in *RequestBuildImage, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.VM/BuildImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMClient) PushImage(ctx context.Context, in *RequestPushImage, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.VM/PushImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VMServer is the server API for VM service.
type VMServer interface {
	Apply(context.Context, *Data) (*emptypb.Empty, error)
	Delete(context.Context, *Data) (*emptypb.Empty, error)
	GetNodeIps(context.Context, *emptypb.Empty) (*Ips, error)
	GetNamespacesList(context.Context, *emptypb.Empty) (*ResponseNamespaceList, error)
	GetServiceList(context.Context, *Namespace) (*ResponseServiceList, error)
	GetServicePort(context.Context, *RequestServicePort) (*ResponseServicePort, error)
	GetDeploymentList(context.Context, *Namespace) (*ResponseDeploymentList, error)
	GetDeploymentStatus(context.Context, *RequestDeploymentStatus) (*ResponseStatus, error)
	GetNamespacesPods(context.Context, *RequestNsPods) (*ResponseNsPods, error)
	BuildImage(context.Context, *RequestBuildImage) (*emptypb.Empty, error)
	PushImage(context.Context, *RequestPushImage) (*emptypb.Empty, error)
}

// UnimplementedVMServer can be embedded to have forward compatible implementations.
type UnimplementedVMServer struct {
}

func (*UnimplementedVMServer) Apply(context.Context, *Data) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedVMServer) Delete(context.Context, *Data) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedVMServer) GetNodeIps(context.Context, *emptypb.Empty) (*Ips, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeIps not implemented")
}
func (*UnimplementedVMServer) GetNamespacesList(context.Context, *emptypb.Empty) (*ResponseNamespaceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespacesList not implemented")
}
func (*UnimplementedVMServer) GetServiceList(context.Context, *Namespace) (*ResponseServiceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceList not implemented")
}
func (*UnimplementedVMServer) GetServicePort(context.Context, *RequestServicePort) (*ResponseServicePort, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServicePort not implemented")
}
func (*UnimplementedVMServer) GetDeploymentList(context.Context, *Namespace) (*ResponseDeploymentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeploymentList not implemented")
}
func (*UnimplementedVMServer) GetDeploymentStatus(context.Context, *RequestDeploymentStatus) (*ResponseStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeploymentStatus not implemented")
}
func (*UnimplementedVMServer) GetNamespacesPods(context.Context, *RequestNsPods) (*ResponseNsPods, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespacesPods not implemented")
}
func (*UnimplementedVMServer) BuildImage(context.Context, *RequestBuildImage) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildImage not implemented")
}
func (*UnimplementedVMServer) PushImage(context.Context, *RequestPushImage) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushImage not implemented")
}

func RegisterVMServer(s *grpc.Server, srv VMServer) {
	s.RegisterService(&_VM_serviceDesc, srv)
}

func _VM_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).Apply(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).Delete(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetNodeIps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetNodeIps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetNodeIps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetNodeIps(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetNamespacesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetNamespacesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetNamespacesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetNamespacesList(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetServiceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Namespace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetServiceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetServiceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetServiceList(ctx, req.(*Namespace))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetServicePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestServicePort)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetServicePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetServicePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetServicePort(ctx, req.(*RequestServicePort))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetDeploymentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Namespace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetDeploymentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetDeploymentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetDeploymentList(ctx, req.(*Namespace))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetDeploymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeploymentStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetDeploymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetDeploymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetDeploymentStatus(ctx, req.(*RequestDeploymentStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_GetNamespacesPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNsPods)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).GetNamespacesPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/GetNamespacesPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).GetNamespacesPods(ctx, req.(*RequestNsPods))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_BuildImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBuildImage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).BuildImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/BuildImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).BuildImage(ctx, req.(*RequestBuildImage))
	}
	return interceptor(ctx, in, info, handler)
}

func _VM_PushImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPushImage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServer).PushImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.VM/PushImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServer).PushImage(ctx, req.(*RequestPushImage))
	}
	return interceptor(ctx, in, info, handler)
}

var _VM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.VM",
	HandlerType: (*VMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _VM_Apply_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _VM_Delete_Handler,
		},
		{
			MethodName: "GetNodeIps",
			Handler:    _VM_GetNodeIps_Handler,
		},
		{
			MethodName: "GetNamespacesList",
			Handler:    _VM_GetNamespacesList_Handler,
		},
		{
			MethodName: "GetServiceList",
			Handler:    _VM_GetServiceList_Handler,
		},
		{
			MethodName: "GetServicePort",
			Handler:    _VM_GetServicePort_Handler,
		},
		{
			MethodName: "GetDeploymentList",
			Handler:    _VM_GetDeploymentList_Handler,
		},
		{
			MethodName: "GetDeploymentStatus",
			Handler:    _VM_GetDeploymentStatus_Handler,
		},
		{
			MethodName: "GetNamespacesPods",
			Handler:    _VM_GetNamespacesPods_Handler,
		},
		{
			MethodName: "BuildImage",
			Handler:    _VM_BuildImage_Handler,
		},
		{
			MethodName: "PushImage",
			Handler:    _VM_PushImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vm.proto",
}
